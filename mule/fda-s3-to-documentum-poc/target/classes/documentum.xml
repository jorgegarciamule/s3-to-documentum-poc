<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:data-mapper="http://www.mulesoft.org/schema/mule/ee/data-mapper"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:https="http://www.mulesoft.org/schema/mule/https"
	xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.5.2"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/data-mapper http://www.mulesoft.org/schema/mule/ee/data-mapper/current/mule-data-mapper.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/https http://www.mulesoft.org/schema/mule/https/current/mule-https.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">
	
	<data-mapper:config name="JSON_To_Pojo"
		transformationGraphPath="json_to_pojo.grf" doc:name="JSON_To_Pojo" />
	<flow name="documentum-create-folder" doc:name="documentum-create-folder" processingStrategy="synchronous">
		<logger
			message="Creating folder: &quot;Submission_&quot; + payload.ParentSubmissionNumber in documentum"
			level="INFO" doc:name="Logger" />
        <set-variable variableName="ParentFolderId" value="#[payload.ParentFolderId]" doc:name="Set parent folder id"/>
		<set-payload
			value="{&quot;type&quot;: &quot;dm_folder&quot;, &quot;properties&quot;: { &quot;object_name&quot;: &quot;#[payload.FolderName]&quot;}}"
			doc:name="Set submission folder info" />

		<http:outbound-endpoint exchange-pattern="request-response"
			host="${documentum.rest.host}" port="${documentum.rest.port}"
			path="${documentum.rest.url}/folders/#[flowVars.ParentFolderId]/folders"
			method="POST" doc:name="Create submission folder in documentum">
			<message-properties-transformer>
				<add-message-property
					value="#['Basic '+ new String(org.apache.commons.codec.binary.Base64.encodeBase64('${documentum.username}:${documentum.password}'.getBytes()))]"
					key="Authorization" />
				<add-message-property value="application/vnd.emc.documentum+json"
					key="Accept" />
				<add-message-property value="application/vnd.emc.documentum+json"
					key="Content-Type" />
			</message-properties-transformer>
		</http:outbound-endpoint>
		<object-to-string-transformer doc:name="Object to String" />
		<data-mapper:transform config-ref="JSON_To_Pojo"
			doc:name="Documentum response to folder objectid" />
		<logger level="INFO" doc:name="Logger" />
	</flow>
	<flow name="documentum-find-folder" doc:name="documentum-find-folder">
        <set-payload value="#[[ &quot;dql&quot;: &quot;select r_object_id from dm_folder where object_name = '&quot;+ payload.FolderName+&quot;' AND FOLDER('&quot;+payload.ParentFolderPath+&quot;')&quot; ]]" doc:name="Set query to find folder "/>
		<http:outbound-endpoint exchange-pattern="request-response"
			host="${documentum.rest.host}" port="${documentum.rest.port}"
			path="${documentum.rest.url}"
			method="POST" doc:name="Find folder in documentum">
			<message-properties-transformer>
				<add-message-property
					value="#['Basic '+ new String(org.apache.commons.codec.binary.Base64.encodeBase64('${documentum.username}:${documentum.password}'.getBytes()))]"
					key="Authorization" />
					<add-message-property key="Content-Type" value="application/x-www-form-urlencoded" />
			</message-properties-transformer>
		</http:outbound-endpoint>
        <set-payload value="#[json:/entries/[0]/content/properties/r_object_id]" doc:name="Get object id from response"/>
	</flow>
	<sub-flow name="amazons3-retrieve-file" doc:name="amazons3-retrieve-file">
		<logger
			message="Getting file range from #[payload.bytesFrom] to #[payload.bytesTo]"
			level="INFO" doc:name="Logger" />

		<https:outbound-endpoint exchange-pattern="request-response"
			host="${s3.host}" port="443" path="#[payload.relativeURL]" method="GET"
			doc:name="get file stream">
			<message-properties-transformer>
				<add-message-property key="Range"
					value="#['bytes=' + payload.bytesFrom +'-'+ payload.bytesTo]" />
			</message-properties-transformer>
		</https:outbound-endpoint>
	</sub-flow>
	<sub-flow name="documentum-add-document-file" doc:name="documentum-add-document-file">
		<logger level="INFO" doc:name="Logger" />
		<component class="com.mule.poc.documentum.DocumentumCall"
			doc:name="Copy_of_Sent 
 			to documentum" />
	</sub-flow>
    <sub-flow name="documentum-create-filefolder" doc:name="documentum-create-filefolder">
        <choice doc:name="Choice">
            <when expression="#[payload.FileSizeInBytes &lt;= ${file.max.size}]">
                <logger message="Only one file part will be processed. " level="INFO" doc:name="Logger"/>
            </when>
            <otherwise>
                <enricher source="#[payload]" target="#[payload.documentumFolderId]" doc:name="Message Enricher">
                    <flow-ref name="documentum-create-file-folder-item" doc:name="Flow Reference"/>
                </enricher>
            </otherwise>
        </choice>
    </sub-flow>
    <sub-flow name="documentum-create-file-folder-item" doc:name="documentum-create-file-folder-item">
        <set-payload value="#[[ &quot;FolderName&quot; : payload.FileName, &quot;ParentFolderId&quot; : payload.documentumFolderId]]" doc:name="Set file folder name"/>
        <flow-ref name="documentum-create-folder" doc:name="Create partial folder in documentum"/>
    </sub-flow>
	<flow name="documentum-create-document" doc:name="documentum-create-document">
		<vm:inbound-endpoint exchange-pattern="one-way"
			path="${vm.documentum.upload}" connector-ref="VMConfig" doc:name="VM" />
        <flow-ref name="documentum-create-filefolder" doc:name="Create file folder"/>
		<expression-component doc:name="Split data of file by parts"><![CDATA[// Create a new collection to store the list of data to retrieve the file by parts
flowVars["items"] =new ArrayList();

//maxSize = 10 *1024*1024; // 10MB
maxSize = ${file.max.size}; // 10bytes

if(payload.FileSizeInBytes <= maxSize){
	flowVars.items.add( { "fileName": payload.FileName,  "bytesFrom": 0, "bytesTo": (long)payload.FileSizeInBytes-1 , "relativeURL":payload.RelativeS3Url , "documentumFolderId":payload.documentumFolderId});
}else{
	for(long bytesFrom = 0; bytesFrom < payload.FileSizeInBytes; bytesFrom = (long)bytesFrom+maxSize ){	
			bytesTo = (long)( bytesFrom +maxSize) > payload.FileSizeInBytes ? payload.FileSizeInBytes - 1 : ( bytesFrom +maxSize) - 1;

			flowVars.items.add( { "fileName": String.format("%s_%06d", payload.FileName, flowVars.items.size())   ,  "bytesFrom": bytesFrom, "bytesTo": bytesTo, "relativeURL":payload.RelativeS3Url, "documentumFolderId":payload.documentumFolderId });
	}
}








]]></expression-component>
		<foreach doc:name="For Each" collection="flowVars.items">
			<logger message="#[payload]" level="INFO" doc:name="Logger" />
			<vm:outbound-endpoint exchange-pattern="one-way"
				path="${vm.documentum.upload.item}" doc:name="VM - Create file part" />
		</foreach>
	</flow>
	<flow name="documentum-create-filepart" doc:name="documentum-create-filepart">
		<vm:inbound-endpoint exchange-pattern="one-way"
			path="${vm.documentum.upload.item}" doc:name="VM" />
		<set-variable variableName="fileData"
			value="#[[ &quot;fileName&quot;: payload.fileName, &quot;documentumFolderId&quot;: payload.documentumFolderId]]"
			doc:name="Set file data" />
		<flow-ref name="amazons3-retrieve-file" doc:name="get file from amazon s3" />
		<flow-ref name="documentum-add-document-file" doc:name="add file to documentum" />
	</flow>
</mule>

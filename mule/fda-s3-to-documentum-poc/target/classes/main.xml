<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:quartz="http://www.mulesoft.org/schema/mule/quartz" xmlns:objectstore="http://www.mulesoft.org/schema/mule/objectstore" xmlns:data-mapper="http://www.mulesoft.org/schema/mule/ee/data-mapper" xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:https="http://www.mulesoft.org/schema/mule/https" xmlns:documentum="http://www.mulesoft.org/schema/mule/documentum" xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.5.2"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/documentum http://www.mulesoft.org/schema/mule/documentum/current/mule-documentum.xsd
http://www.mulesoft.org/schema/mule/https http://www.mulesoft.org/schema/mule/https/current/mule-https.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/ee/data-mapper http://www.mulesoft.org/schema/mule/ee/data-mapper/current/mule-data-mapper.xsd
http://www.mulesoft.org/schema/mule/objectstore http://www.mulesoft.org/schema/mule/objectstore/current/mule-objectstore.xsd
http://www.mulesoft.org/schema/mule/quartz http://www.mulesoft.org/schema/mule/quartz/current/mule-quartz.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd">
    <data-mapper:config name="mapMetadata_To_List_Submission_File__c_" transformationGraphPath="mapmetadata_to_list_submission_file__c_.grf" doc:name="mapMetadata_To_List_Submission_File__c_"/>
    <data-mapper:config name="mapMetadata_To_Submission_File__c" transformationGraphPath="mapmetadata_to_submission_file__c.grf" doc:name="mapMetadata_To_Submission_File__c"/>
    <data-mapper:config name="List_Submission_File__c__To_Map" transformationGraphPath="list_submission_file__c__to_map.grf" doc:name="List_Submission_File__c__To_Map"/>
    <batch:job name="poll-sfdc-submissions-processing">
        <batch:threading-profile poolExhaustedAction="WAIT"/>
        <batch:input>
            <poll doc:name="Poll">
                <fixed-frequency-scheduler frequency="${polling.frequency}" timeUnit="HOURS"/>
                <sfdc:query config-ref="SalesforceConfig" query="dsql:SELECT Copied_to_FDA__c,FDA_File_Transfer_Status_Message__c,FDA_File_Transfer_Status__c,File_Name__c,File_Size_in_Bytes__c,Id,Parent_Folder_Id__c,Parent_Submission_Number__c,S3_URL__c,WIP__c FROM Submission_File__c WHERE  (FDA_File_Transfer_Status__c = '' OR FDA_File_Transfer_Status__c = 'NOT PROCESSED') AND Copied_to_FDA__c = false AND IsDeleted = false AND WIP__c = false AND Parent_Submission_Status__c = 'Submitted' AND Parent_Submission_Number__c &lt;&gt; null AND Parent_Submission_Number__c &lt;&gt; ''" fetchSize="${page.size}" doc:name="Get submissions files"/>
            </poll>
            <data-mapper:transform config-ref="List_Submission_File__c__To_Map" doc:name="List&lt;Submission_File__c&gt; To Map"/>
        </batch:input>
        <batch:process-records>
            <batch:step name="validate-link">
                <logger message="File with id: #[payload.Id] Size in bytes: #[payload.FileSizeInBytes]" level="INFO" doc:name="Logger"/>
                <flow-ref name="validate-s3link" doc:name="Validate link"/>
            </batch:step>
            <batch:step name="create-submission-folder" accept-expression="recordVars[&quot;validLink&quot;]">
                <enricher source="#[payload]" target="#[payload['ParentFolderId']]" doc:name="Message Enricher">
                    <flow-ref name="fda-create-documentum-submission-folder" doc:name="create folder in documentum"/>
                </enricher>
            </batch:step>
            <batch:step name="sent-to-vm-for-processing" accept-expression="recordVars[&quot;validLink&quot;]">
                <vm:outbound-endpoint exchange-pattern="one-way" path="${vm.documentum.upload}" doc:name="Sent S3 files to documentum" connector-ref="VMConfig"/>
            </batch:step>
            <batch:step name="update-saleforce-status">
                <data-mapper:transform config-ref="mapMetadata_To_Submission_File__c" doc:name="mapMetadata To Submission_File__c"/>
                <sfdc:update-single config-ref="SalesforceConfig" type="Submission_File__c" doc:name="Update submission file"/>
            </batch:step>
        </batch:process-records>
    </batch:job>
    <sub-flow name="fda-create-documentum-submission-folder" doc:name="fda-create-documentum-submission-folder">
        <batch:set-record-variable variableName="SubmissionFolderName" value="Submission_#[payload.ParentSubmissionNumber]" doc:name="Set submission folde name"/>
        <set-payload value="#[[ &quot;ParentFolderPath&quot;: &quot;/Submissions&quot;, &quot;FolderName&quot; : recordVars.SubmissionFolderName]]" doc:name="Set folder to search"/>
        <flow-ref name="documentum-find-folder" doc:name="Find folder id in documentum"/>
        <choice doc:name="Choice">
            <when expression="#[payload != NullPayload.getInstance()]">
                <logger message="Existing folder with id: #[payload]" level="INFO" doc:name="Logger"/>
            </when>
            <otherwise>
                <set-payload value="#[[ &quot;FolderName&quot; : recordVars.SubmissionFolderName, &quot;ParentFolderId&quot;: &quot;${documentum.submissions.cabinet.objectid}&quot;]]" doc:name="Set folder name"/>
                <flow-ref name="documentum-create-folder" doc:name="Create folder in documentum"/>
            </otherwise>
        </choice>
    </sub-flow>
    <sub-flow name="validate-s3link" doc:name="validate-s3link">
        <logger message="validating: #[payload.S3URL]" level="INFO" doc:name="Logger"/>
        <enricher   doc:name="Message Enricher" source="#[message.inboundProperties['http.status'] &gt;= 200 &amp;&amp; message.inboundProperties['http.status'] &lt; 300]" target="#[recordVars[&quot;validLink&quot;]]">
            <https:outbound-endpoint exchange-pattern="request-response" host="${s3.host}" port="443" path="#[payload.RelativeS3Url]" method="GET" doc:name="Get head of file" connector-ref="S3_HTTP_HTTPS">
            	<message-properties-transformer> 
            		<add-message-property key="Range" value="bytes=0-0" />
            	</message-properties-transformer>
            </https:outbound-endpoint>
        </enricher>
        <choice doc:name="Choice">
            <when expression="#[recordVars[&quot;validLink&quot;]]">
                <expression-component doc:name="Set PROCESSING status"><![CDATA[payload.FDAFileTransferStatus = "PROCESSING";
payload.WorkInProgress = (boolean)true;

payload.FDAFileTransferStatusMessage = "Initialiting process to download files from s3";



]]></expression-component>
            </when>
            <otherwise>
                <expression-component doc:name="Set ERROR status"><![CDATA[payload.FDAFileTransferStatus = "ERROR";
payload.FDAFileTransferStatusMessage = "The download link is ianvalid or has expired";
]]></expression-component>
                <logger level="INFO" doc:name="Logger"/>
            </otherwise>
        </choice>
    </sub-flow>
<!--     <flow name="mainFlow1" doc:name="mainFlow1"> -->
<!--         <quartz:inbound-endpoint jobName="update-sfdc-file-state" repeatInterval="10000" responseTimeout="10000" doc:name="Quartz"> -->
<!--             <quartz:event-generator-job/> -->
<!--         </quartz:inbound-endpoint> -->
<!--     </flow> -->
</mule>
